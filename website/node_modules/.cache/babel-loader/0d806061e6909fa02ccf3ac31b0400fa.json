{"ast":null,"code":"const axios = require('axios');\n\nexport class Sled {\n  constructor() {\n    this.gifts = [];\n    this.isDelivering = false;\n  }\n\n  reset() {\n    if (!this.isDelivering) {\n      this.gifts = [];\n      return \"\";\n    } else {\n      return \"Reindeers are delivering !\";\n    }\n  }\n\n  isTooHeavy(gift) {\n    let sum = 0;\n\n    for (let i = 0; i < this.gifts.length; i++) {\n      sum += this.gifts[i].weight;\n    }\n\n    sum += gift.weight;\n\n    if (sum <= 12) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  displaySled() {\n    let str = \"\";\n\n    for (let i = 0; i < this.gifts.length; i++) {\n      str += \"<li class='list-group-item list-group-item-success'> Gift \" + (i + 1) + \" : \" + this.gifts[i].constructor.name + \"</li>\";\n    }\n\n    return str;\n  }\n\n  async deliver(dwarf) {\n    if (!dwarf.isWorking) {\n      if (!this.isDelivering) {\n        if (this.gifts.length > 0) {\n          this.isDelivering = true;\n\n          try {\n            await axios.post('http://localhost:8081', {\n              gifts: this.gifts\n            });\n            this.gifts = [];\n            this.isDelivering = false;\n            return \"Gifts have been delivered\";\n          } catch {\n            this.isDelivering = false;\n            return \"Reindeers are hungry\";\n          }\n        } else {\n          return \"Sled empty\";\n        }\n      } else {\n        return \"Reindeers are delivering !\";\n      }\n    } else {\n      return \"Dwarf is working\";\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/thibaultpfeffer/Documents/isep/A3 technos web avancees/santa-claus2/santaclaus/website/src/sled.js"],"names":["axios","require","Sled","constructor","gifts","isDelivering","reset","isTooHeavy","gift","sum","i","length","weight","displaySled","str","name","deliver","dwarf","isWorking","post"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,OAAO,MAAMC,IAAN,CAAW;AACdC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,YAAL,GAAoB,KAApB;AACH;;AAGDC,EAAAA,KAAK,GAAG;AACJ,QAAI,CAAC,KAAKD,YAAV,EAAwB;AACpB,WAAKD,KAAL,GAAa,EAAb;AACA,aAAO,EAAP;AACH,KAHD,MAGO;AACH,aAAO,4BAAP;AACH;AAEJ;;AAEDG,EAAAA,UAAU,CAACC,IAAD,EAAO;AACb,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,KAAL,CAAWO,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxCD,MAAAA,GAAG,IAAI,KAAKL,KAAL,CAAWM,CAAX,EAAcE,MAArB;AACH;;AACDH,IAAAA,GAAG,IAAID,IAAI,CAACI,MAAZ;;AACA,QAAIH,GAAG,IAAI,EAAX,EAAe;AACX,aAAO,KAAP;AACH,KAFD,MAEO;AACH,aAAO,IAAP;AACH;AACJ;;AAEDI,EAAAA,WAAW,GAAG;AACV,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,KAAL,CAAWO,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxCI,MAAAA,GAAG,IAAI,gEAAgEJ,CAAC,GAAG,CAApE,IAAyE,KAAzE,GAAiF,KAAKN,KAAL,CAAWM,CAAX,EAAcP,WAAd,CAA0BY,IAA3G,GAAkH,OAAzH;AACH;;AACD,WAAOD,GAAP;AACH;;AAED,QAAME,OAAN,CAAcC,KAAd,EAAqB;AACjB,QAAI,CAACA,KAAK,CAACC,SAAX,EAAsB;AAClB,UAAI,CAAC,KAAKb,YAAV,EAAwB;AACpB,YAAI,KAAKD,KAAL,CAAWO,MAAX,GAAoB,CAAxB,EAA2B;AACvB,eAAKN,YAAL,GAAoB,IAApB;;AACA,cAAI;AACA,kBAAML,KAAK,CAACmB,IAAN,CAAW,uBAAX,EAAoC;AACtCf,cAAAA,KAAK,EAAE,KAAKA;AAD0B,aAApC,CAAN;AAGA,iBAAKA,KAAL,GAAa,EAAb;AACA,iBAAKC,YAAL,GAAoB,KAApB;AACA,mBAAO,2BAAP;AACH,WAPD,CAOE,MAAM;AACJ,iBAAKA,YAAL,GAAoB,KAApB;AACA,mBAAO,sBAAP;AACH;AACJ,SAbD,MAaO;AACH,iBAAO,YAAP;AACH;AACJ,OAjBD,MAiBO;AACH,eAAO,4BAAP;AACH;AACJ,KArBD,MAqBO;AACH,aAAO,kBAAP;AACH;AAEJ;;AAhEa","sourcesContent":["const axios = require('axios');\nexport class Sled {\n    constructor() {\n        this.gifts = []\n        this.isDelivering = false;\n    }\n\n\n    reset() {\n        if (!this.isDelivering) {\n            this.gifts = []\n            return \"\"\n        } else {\n            return \"Reindeers are delivering !\"\n        }\n\n    }\n\n    isTooHeavy(gift) {\n        let sum = 0\n        for (let i = 0; i < this.gifts.length; i++) {\n            sum += this.gifts[i].weight\n        }\n        sum += gift.weight\n        if (sum <= 12) {\n            return false\n        } else {\n            return true\n        }\n    }\n\n    displaySled() {\n        let str = \"\"\n        for (let i = 0; i < this.gifts.length; i++) {\n            str += \"<li class='list-group-item list-group-item-success'> Gift \" + (i + 1) + \" : \" + this.gifts[i].constructor.name + \"</li>\"\n        }\n        return str\n    }\n\n    async deliver(dwarf) {\n        if (!dwarf.isWorking) {\n            if (!this.isDelivering) {\n                if (this.gifts.length > 0) {\n                    this.isDelivering = true\n                    try {\n                        await axios.post('http://localhost:8081', {\n                            gifts: this.gifts\n                        })\n                        this.gifts = []\n                        this.isDelivering = false;\n                        return \"Gifts have been delivered\"\n                    } catch {\n                        this.isDelivering = false;\n                        return \"Reindeers are hungry\"\n                    }\n                } else {\n                    return \"Sled empty\"\n                }\n            } else {\n                return \"Reindeers are delivering !\"\n            }\n        } else {\n            return \"Dwarf is working\"\n        }\n\n    }\n}"]},"metadata":{},"sourceType":"module"}