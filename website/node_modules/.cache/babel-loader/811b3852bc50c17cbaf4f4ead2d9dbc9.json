{"ast":null,"code":"import { giftFactory } from './gift.js';\nexport class Dwarf {\n  constructor() {\n    this.isWorking = false;\n  }\n\n  reset() {\n    if (!this.isWorking) {\n      this.gifts = [];\n      return \"\";\n    } else {\n      return \" Dwarf is working\";\n    }\n  }\n\n  prepareGift(gift) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        this.isWorking = false;\n        resolve(\"ok\");\n      }, gift.preparation_time * 1000);\n    });\n  }\n\n  dwarfWorking() {\n    return this.isWorking;\n  }\n\n  async createGift(type, sled) {\n    const gift = giftFactory(type);\n\n    if (!sled.isDelivering) {\n      if (!sled.isTooHeavy(gift)) {\n        if (!this.isWorking) {\n          this.isWorking = true;\n\n          try {\n            await this.prepareGift(gift);\n          } catch (err) {\n            return err;\n          }\n\n          sled.gifts.push(gift);\n          return \"Gift added successfully to the sled\";\n        } else {\n          return \"Dwarf is working\";\n        }\n      } else {\n        return \"Sled too Heavy\";\n      }\n    } else {\n      return 'Dwarf says : the sled is not here, so why would I bother?!';\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/antoinemassy/Desktop/lab3/website/src/dwarf.js"],"names":["giftFactory","Dwarf","constructor","isWorking","reset","gifts","prepareGift","gift","Promise","resolve","reject","setTimeout","preparation_time","dwarfWorking","createGift","type","sled","isDelivering","isTooHeavy","err","push"],"mappings":"AAAA,SACIA,WADJ,QAEO,WAFP;AAIA,OAAO,MAAMC,KAAN,CAAY;AACfC,EAAAA,WAAW,GAAG;AACV,SAAKC,SAAL,GAAiB,KAAjB;AACH;;AACDC,EAAAA,KAAK,GAAG;AACJ,QAAI,CAAC,KAAKD,SAAV,EAAqB;AACjB,WAAKE,KAAL,GAAa,EAAb;AACA,aAAO,EAAP;AACH,KAHD,MAGO;AACH,aAAO,mBAAP;AACH;AACJ;;AACDC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKR,SAAL,GAAiB,KAAjB;AACAM,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAHS,EAGNF,IAAI,CAACK,gBAAL,GAAwB,IAHlB,CAAV;AAIH,KALM,CAAP;AAMH;;AACDC,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKV,SAAZ;AACH;;AACD,QAAMW,UAAN,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AACzB,UAAMT,IAAI,GAAGP,WAAW,CAACe,IAAD,CAAxB;;AACA,QAAI,CAACC,IAAI,CAACC,YAAV,EAAwB;AACpB,UAAI,CAACD,IAAI,CAACE,UAAL,CAAgBX,IAAhB,CAAL,EAA4B;AACxB,YAAI,CAAC,KAAKJ,SAAV,EAAqB;AACjB,eAAKA,SAAL,GAAiB,IAAjB;;AACA,cAAI;AACA,kBAAM,KAAKG,WAAL,CAAiBC,IAAjB,CAAN;AACH,WAFD,CAEE,OAAOY,GAAP,EAAY;AACV,mBAAOA,GAAP;AACH;;AACDH,UAAAA,IAAI,CAACX,KAAL,CAAWe,IAAX,CAAgBb,IAAhB;AACA,iBAAO,qCAAP;AACH,SATD,MASO;AACH,iBAAO,kBAAP;AACH;AACJ,OAbD,MAaO;AACH,eAAO,gBAAP;AACH;AACJ,KAjBD,MAiBO;AACH,aAAO,4DAAP;AACH;AACJ;;AA7Cc","sourcesContent":["import {\n    giftFactory\n} from './gift.js'\n\nexport class Dwarf {\n    constructor() {\n        this.isWorking = false;\n    }\n    reset() {\n        if (!this.isWorking) {\n            this.gifts = []\n            return \"\"\n        } else {\n            return \" Dwarf is working\"\n        }\n    }\n    prepareGift(gift) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                this.isWorking = false\n                resolve(\"ok\")\n            }, (gift.preparation_time * 1000))\n        })\n    }\n    dwarfWorking() {\n        return this.isWorking\n    }\n    async createGift(type, sled) {\n        const gift = giftFactory(type)\n        if (!sled.isDelivering) {\n            if (!sled.isTooHeavy(gift)) {\n                if (!this.isWorking) {\n                    this.isWorking = true\n                    try {\n                        await this.prepareGift(gift)\n                    } catch (err) {\n                        return err\n                    }\n                    sled.gifts.push(gift)\n                    return \"Gift added successfully to the sled\"\n                } else {\n                    return \"Dwarf is working\"\n                }\n            } else {\n                return \"Sled too Heavy\"\n            }\n        } else {\n            return 'Dwarf says : the sled is not here, so why would I bother?!'\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}