{"ast":null,"code":"import { giftFactory } from './gift.js';\nimport { Sled } from './sled.js';\nimport { Dwarf } from './dwarf.js';\nexport class GiftsFactory {\n  constructor() {\n    this.dwarf = new Dwarf();\n    this.sled = new Sled();\n    this.message = \"test\";\n  }\n\n  async createGift(type) {\n    const gift = giftFactory(type);\n\n    if (this.sled.isTooHeavy(gift)) {\n      return \"Sled too Heavy\";\n    } else {\n      try {\n        if (!this.dwarf.getIsWorking()) {\n          this.dwarf.setIsWorking(true);\n          await this.dwarf.prepareGift(gift);\n          this.dwarf.addGift(this.sled, gift);\n          console.log(this.sled);\n        } else {\n          return \"Dwarf is working\";\n        }\n      } catch (err) {\n        console.log(err);\n        return err;\n      }\n    }\n\n    return this.message = \"okkk\";\n  }\n\n}","map":{"version":3,"sources":["/Users/antoinemassy/Desktop/A3/TechnoWebAdv/lab3/website/src/giftsFactory.js"],"names":["giftFactory","Sled","Dwarf","GiftsFactory","constructor","dwarf","sled","message","createGift","type","gift","isTooHeavy","getIsWorking","setIsWorking","prepareGift","addGift","console","log","err"],"mappings":"AAAA,SACIA,WADJ,QAEO,WAFP;AAGA,SACIC,IADJ,QAEO,WAFP;AAGA,SACIC,KADJ,QAEO,YAFP;AAMA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,IAAIH,KAAJ,EAAb;AACA,SAAKI,IAAL,GAAY,IAAIL,IAAJ,EAAZ;AACA,SAAKM,OAAL,GAAe,MAAf;AACH;;AAED,QAAMC,UAAN,CAAiBC,IAAjB,EAAuB;AACnB,UAAMC,IAAI,GAAGV,WAAW,CAACS,IAAD,CAAxB;;AACA,QAAI,KAAKH,IAAL,CAAUK,UAAV,CAAqBD,IAArB,CAAJ,EAAgC;AAC5B,aAAO,gBAAP;AACH,KAFD,MAEO;AACH,UAAI;AACA,YAAI,CAAC,KAAKL,KAAL,CAAWO,YAAX,EAAL,EAAgC;AAC5B,eAAKP,KAAL,CAAWQ,YAAX,CAAwB,IAAxB;AACA,gBAAM,KAAKR,KAAL,CAAWS,WAAX,CAAuBJ,IAAvB,CAAN;AACA,eAAKL,KAAL,CAAWU,OAAX,CAAmB,KAAKT,IAAxB,EAA8BI,IAA9B;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,IAAjB;AACH,SALD,MAKO;AACH,iBAAO,kBAAP;AACH;AACJ,OATD,CASE,OAAOY,GAAP,EAAY;AACVF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,eAAOA,GAAP;AACH;AACJ;;AACD,WAAO,KAAKX,OAAL,GAAe,MAAtB;AACH;;AA3BqB","sourcesContent":["import {\n    giftFactory\n} from './gift.js'\nimport {\n    Sled\n} from './sled.js'\nimport {\n    Dwarf\n} from './dwarf.js'\n\n\n\nexport class GiftsFactory {\n    constructor() {\n        this.dwarf = new Dwarf();\n        this.sled = new Sled();\n        this.message = \"test\"\n    }\n\n    async createGift(type) {\n        const gift = giftFactory(type)\n        if (this.sled.isTooHeavy(gift)) {\n            return \"Sled too Heavy\"\n        } else {\n            try {\n                if (!this.dwarf.getIsWorking()) {\n                    this.dwarf.setIsWorking(true)\n                    await this.dwarf.prepareGift(gift)\n                    this.dwarf.addGift(this.sled, gift)\n                    console.log(this.sled)\n                } else {\n                    return \"Dwarf is working\"\n                }\n            } catch (err) {\n                console.log(err)\n                return err\n            }\n        }\n        return this.message = \"okkk\"\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}