{"ast":null,"code":"import { giftFactory } from './gift.js';\nexport class Dwarf {\n  constructor() {\n    this.isWorking = false;\n  }\n\n  reset() {\n    if (!this.isWorking) {\n      this.gifts = [];\n      return \"\";\n    } else {\n      return \" Dwarf is working\";\n    }\n  }\n\n  prepareGift(gift) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        this.isWorking = false;\n        resolve(\"ok\");\n      }, gift.preparation_time * 1000);\n    });\n  }\n\n  dwarfWorking() {\n    return this.isWorking;\n  }\n\n  async createGift(type, sled) {\n    const gift = giftFactory(type);\n\n    if (!sled.isDelivering) {\n      if (!sled.isTooHeavy(gift)) {\n        try {\n          if (!this.isWorking) {\n            this.isWorking = true;\n            await this.prepareGift(gift);\n            sled.gifts.push(gift);\n            return \"Gift added successfully to the sled\";\n          } else {\n            return \"Dwarf is working\";\n          }\n        } catch (err) {\n          return err;\n        }\n      } else {\n        return \"Sled too Heavy\";\n      }\n    } else {\n      return 'Dwarf says : the sled is not here, so why would I bother?!';\n    }\n\n    if (sled.isDelivering) {} else {\n      if (sled.isTooHeavy(gift)) {\n        return \"Sled too Heavy\";\n      } else {\n        try {\n          if (!this.isWorking) {\n            this.isWorking = true;\n            await this.prepareGift(gift);\n            sled.gifts.push(gift);\n          } else {\n            return \"Dwarf is working\";\n          }\n        } catch (err) {\n          return err;\n        }\n      }\n    }\n\n    return \"Gift added successfully to the sled\";\n  }\n\n}","map":{"version":3,"sources":["/Users/antoinemassy/Desktop/A3/TechnoWebAdv/lab3/website/src/dwarf.js"],"names":["giftFactory","Dwarf","constructor","isWorking","reset","gifts","prepareGift","gift","Promise","resolve","reject","setTimeout","preparation_time","dwarfWorking","createGift","type","sled","isDelivering","isTooHeavy","push","err"],"mappings":"AAAA,SACIA,WADJ,QAEO,WAFP;AAIA,OAAO,MAAMC,KAAN,CAAY;AACfC,EAAAA,WAAW,GAAG;AACV,SAAKC,SAAL,GAAiB,KAAjB;AACH;;AAEDC,EAAAA,KAAK,GAAE;AACH,QAAG,CAAC,KAAKD,SAAT,EAAmB;AACf,WAAKE,KAAL,GAAa,EAAb;AACA,aAAO,EAAP;AACH,KAHD,MAGK;AACD,aAAO,mBAAP;AACH;AACJ;;AACDC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKR,SAAL,GAAiB,KAAjB;AACAM,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAHS,EAGNF,IAAI,CAACK,gBAAL,GAAwB,IAHlB,CAAV;AAIH,KALM,CAAP;AAMH;;AACDC,EAAAA,YAAY,GAAE;AACV,WAAO,KAAKV,SAAZ;AACH;;AAED,QAAMW,UAAN,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AACzB,UAAMT,IAAI,GAAGP,WAAW,CAACe,IAAD,CAAxB;;AAEJ,QAAG,CAACC,IAAI,CAACC,YAAT,EAAsB;AAClB,UAAI,CAACD,IAAI,CAACE,UAAL,CAAgBX,IAAhB,CAAL,EAA4B;AACxB,YAAI;AACA,cAAI,CAAC,KAAKJ,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,IAAjB;AACA,kBAAM,KAAKG,WAAL,CAAiBC,IAAjB,CAAN;AACAS,YAAAA,IAAI,CAACX,KAAL,CAAWc,IAAX,CAAgBZ,IAAhB;AACA,mBAAO,qCAAP;AACH,WALD,MAKO;AACH,mBAAO,kBAAP;AACH;AACJ,SATD,CASE,OAAOa,GAAP,EAAY;AACV,iBAAOA,GAAP;AACH;AAEJ,OAdD,MAcO;AACH,eAAO,gBAAP;AACH;AACJ,KAlBD,MAkBK;AACD,aAAO,4DAAP;AACH;;AAIG,QAAKJ,IAAI,CAACC,YAAV,EAAwB,CAEvB,CAFD,MAEO;AACH,UAAID,IAAI,CAACE,UAAL,CAAgBX,IAAhB,CAAJ,EAA2B;AACvB,eAAO,gBAAP;AACH,OAFD,MAEO;AACH,YAAI;AACA,cAAI,CAAC,KAAKJ,SAAV,EAAqB;AACjB,iBAAKA,SAAL,GAAiB,IAAjB;AACA,kBAAM,KAAKG,WAAL,CAAiBC,IAAjB,CAAN;AACAS,YAAAA,IAAI,CAACX,KAAL,CAAWc,IAAX,CAAgBZ,IAAhB;AACH,WAJD,MAIO;AACH,mBAAO,kBAAP;AACH;AACJ,SARD,CAQE,OAAOa,GAAP,EAAY;AACV,iBAAOA,GAAP;AACH;AACJ;AACJ;;AACD,WAAO,qCAAP;AACH;;AAxEc","sourcesContent":["import {\n    giftFactory\n} from './gift.js'\n\nexport class Dwarf {\n    constructor() {\n        this.isWorking = false;\n    }\n\n    reset(){\n        if(!this.isWorking){\n            this.gifts = []\n            return \"\"\n        }else{\n            return \" Dwarf is working\"\n        }\n    }\n    prepareGift(gift) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                this.isWorking = false\n                resolve(\"ok\")\n            }, (gift.preparation_time * 1000))\n        })\n    }\n    dwarfWorking(){\n        return this.isWorking\n    }\n\n    async createGift(type, sled) {\n        const gift = giftFactory(type)\n\n    if(!sled.isDelivering){\n        if (!sled.isTooHeavy(gift)) {\n            try {\n                if (!this.isWorking) {\n                    this.isWorking = true\n                    await this.prepareGift(gift)\n                    sled.gifts.push(gift)\n                    return \"Gift added successfully to the sled\"\n                } else {\n                    return \"Dwarf is working\"\n                }\n            } catch (err) {\n                return err\n            }\n            \n        } else {\n            return \"Sled too Heavy\"\n        }\n    }else{\n        return 'Dwarf says : the sled is not here, so why would I bother?!'\n    }\n\n\n\n        if ( sled.isDelivering) {\n            \n        } else {\n            if (sled.isTooHeavy(gift)) {\n                return \"Sled too Heavy\"\n            } else {\n                try {\n                    if (!this.isWorking) {\n                        this.isWorking = true\n                        await this.prepareGift(gift)\n                        sled.gifts.push(gift)\n                    } else {\n                        return \"Dwarf is working\"\n                    }\n                } catch (err) {\n                    return err\n                }\n            }\n        }\n        return \"Gift added successfully to the sled\"\n    }\n}"]},"metadata":{},"sourceType":"module"}